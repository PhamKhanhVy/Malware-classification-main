import flwr as fl
import utilss
from keras.models import Sequential 
from typing import Dict
import visualresult, model

class Server():
    def fit_round(server_round: int) -> Dict:  # kết quả fit tổng hợp tính bằng trung bình có trọng số 
        """Send round number to client."""
        return {"server_round": server_round}
    loss = []
    def get_evaluate_fn(model: Sequential): 
        """Return an evaluation function for server-side evaluation."""
        # Load test data here to avoid the overhead of doing it in `evaluate` itself
        _, (X_test, y_test) = utilss.load_data()
        # The `evaluate` function will be called after every round
        def evaluate(server_round, parameters: fl.common.NDArrays, config): 
            # Update model with the latest parameters
            model.compile(loss='sparse_categorical_crossentropy', optimizer='Adam', metrics=['accuracy'])
            utilss.set_model_params(model, parameters)
            loss, accuracy = model.evaluate(X_test, y_test)
            return loss, {"Log accuracy": accuracy}
        return evaluate 

# Start Flower server for five rounds of federated learning
if __name__ == "__main__":
    model = model.buildmodel()
    utilss.set_initial_params(model)
    strategy = fl.server.strategy.FedAvg( #chiến lược triểm khai lớp cơ sở trừu tượng 
        min_available_clients=2, 
        evaluate_fn=Server.get_evaluate_fn(model),
        on_fit_config_fn=Server.fit_round, #định cấu hình đào tạo 
    )
    fl.server.start_server(
        server_address="[::]:8080",
        strategy=strategy,
        config=fl.server.ServerConfig(num_rounds=5), #giá trị num_round
    )
    #plot result
    visualresult.pltplotServer(model)
    